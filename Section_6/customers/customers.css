.testimonial {
    font-size: 1.2rem;

    /* Actually, we can apply rem and em not just to font, but also to other
       properties, like margin or padding.

       The value rem refers to is still the font size. For example, the default
       font-size is 16px, 3rem for margin means the margin is 48px.
    */
    margin: 3rem 0;
  }
  
  .testimonial__list {
    width: 80%;
    margin: auto;
  }
  
  .testimonial:first-of-type {
    margin-top: 6rem;
  }

  .testimonial__image-container {
    /* By using a mix of percentage width and fixed min-max-width, we can 
       make sure within the range of specific extend, the image is responsive.
       But it cannot be smaller/bigger if we reach a certain threshold.
    */
    width: 65%;
    max-width: 580px;

    display: inline-block;
    vertical-align: middle;
    box-shadow: 3px 3px 5px 3px rgba(0, 0, 0, 0.3);
  }

  .testimonial__image {
    width: 100%;
    vertical-align: top;
  }
  
  .testimonial__info {
    text-align: right;
    padding: 0.9rem;
    display: inline-block;
    vertical-align: middle;

    width: 20%
  }
  
  #customer-2.testimonial {
    text-align: right;
  }
  
  #customer-2 .testimonial__info {
    text-align: left;
  }
  
  .testimonial__name {
    margin: 0.2rem;
    color: #ff5454;
    font-size: 2rem;
  }
  
  .testimonial__subtitle {
    margin: 0;

    /* 
       The problem of defining a fixed font-size is that the responsiveness of
       the page is not very good. Because when we change the font-size of the 
       browser, the font which has a fixed font-size (like 18px) still has the
       font-size that is used to have and doesn't change with the changing font-size
       of the browser.

       The solution to solve this issue is to use em and rem (r stands for root).

       One of the issue of using em is that the em value used by its parent
       block will also be multiplied here. That's to say, if the parent block 
       has a font-size of 1.5em, and the current one is 1.1em. Then, the font-size
       of the current element is 1.1em * 1.5em. It's very confusing and messy.

       The better way to do this is to use rem. Rem doesn't have this multiply-chain
       problem. It only refers to the font-size of the browser. For example, if the
       font of the browser is set to be 18 (medium). No matter how many ancestors with
       em value specified that the current element has, the current font-size only
       refers to the browser's font-size, which is 18 * 1.2 (if the rem is set to be
       1.2 rem).  
    */
    font-size: 1.1rem;
    color: #ccc;
  }
  
  .testimonial__subtitle a {
    color: inherit;
    text-decoration: none;
  }
  
  .testimonial__subtitle a:hover,
  .testimonial__subtitle a:active {
    color: #7a7a7a;
  }
  
  .testimonial__text {
    margin: 0.2rem;
  }
  
  