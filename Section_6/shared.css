* {
    box-sizing: border-box;
}

body {
    font-family: 'Montserrat', sans-serif;
    margin: 0;
}

.backdrop {
    /* When position: fixed, the height and width are relative to the current viewport.
       When position: absolute, the height and width are relative to the closest ancestor (content + padding)
       When position: relative or static, the height and width are relative to the closest block element (content).

       When position: fixed or absolute, the current element is taken out of the document flow.
       When position: static or relative, the current element is still in the current document flow.
    */
    position: fixed;
    display: none;
    top: 0;
    left: 0;

    /* This is a temp solution and will be changed very soon
       The reason why we use relative here is because we want the backdrop to
       be on top of all the other elements, so that we want to use the z-index
       property. position: static(default) will not allow us to use z-index (no-effect)
       When doing it like this, the element will not be taken out of the document
       flow, becasue position: relative just behaves like this. So, we should use 
       position: absolute instead to make the backdrop on top of the other elements.    
       */
    /* position: relative; */
    z-index: 100;

    /* 
       100vw and 100vh means the backdrop should take 100% of the viewport width
       and viewport height.

       There is also a value vmin, which will take the height/width of the smaller
       viewport. That's to say, if the height is 50vh, and width is 80vmin, the width
       will become 80% of the height (which is 50vh, since the height is smaller).

       There is also another value, vmax, which simply works the other way around
       as the vmin.
    */
    width: 100vw;
    height: 100vh;

    /* width: 100%;
    height: 100%; */
    background: rgba(0,0,0,0.5);
}

.main-header {

     /* 
        1. The first rule of using percentage as the unit:
        When the position is fixed, the containing element is the current viewport. 
        That's to say, here we set the width is 100%, the width is equal to the width
        of the viewport.  

        * When using position and percentage, the containing element the current refers to
          changes to be the viewport. Not the parent element anymore.
        *

        2. The second rule:
        When the position is absolute, the containing block the percentage refers to is the ancestor.
        By ancestor, its the content and padding for the ancestor block. 
        Which element should be considered as the ancestor? It's the closest ancesor with a position
        property that doesn't have a default (static) value. It can be absolute, fixed, relative, sticky.

        3. The third rule:
        When the position is static (default) or relative, the percentage it refers to only the content of
        the ancestor. What is the ancestor in this case? Now, the ancestor is the closest block element.
    */

    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: #2ddf5c;
    padding: 0.5rem 1rem;
    z-index: 1;
}

.main-header > div {
    display: inline-block;
    vertical-align: middle;
}

.main-header__brand {
    color: #0e4f1f;
    text-decoration: none;
    font-weight: bold;
    font-size: 1.5rem;
    height: 1.5rem;
    /* width: 20px; */
    display: inline-block;
}

.main-header__brand img {
    height: 100%;
    /* width: 100%; */
}

.main-nav {
    display: inline-block;
    text-align: right;
    width: calc(100% - 74px);
    vertical-align: middle;
}

.main-nav__items {
    margin: 0;
    padding: 0;
    list-style: none;
}

.main-nav__item {
    display: inline-block;
    margin: 0 1rem;
}

.main-nav__item a {
    text-decoration: none;
    color: #0e4f1f;
    font-weight: bold;
    padding: 0.2rem 0;
}

.main-nav__item a:hover,
.main-nav__item a:active {
    color: white;
    border-bottom: 5px solid white;
}

.main-nav__item--cta a {
    color: white;
    background: #ff1b68;
    padding: 0.5rem 1rem;
    border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active {
    color: #ff1b68;
    background: white;
    border: none;
}

.main-footer {
    background: black;
    padding: 2rem;
    margin-top: 3rem;
}

.main-footer__links {
    list-style: none;
    margin: 0;
    padding: 0;
    text-align: center;
}

.main-footer__link {
    display: inline-block;
    margin: 0 1rem;
}

.main-footer__link a {
    color: white;
    text-decoration: none;
}

.main-footer__link a:hover,
.main-footer__link a:active {
    color: #ccc;
}

.button {
    background: #0e4f1f;
    color: white;
    font: inherit;
    border: 1.5px solid #0e4f1f;
    padding: 0.5rem;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
}

.button:hover,
.button:active {
    background: white;
    color: #0e4f1f;
}

.button:focus {
    outline: none;
}